// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ssr_vec
arma::vec ssr_vec(int start, arma::vec y, arma::mat z, int h, int last);
RcppExport SEXP _mbreaks_ssr_vec(SEXP startSEXP, SEXP ySEXP, SEXP zSEXP, SEXP hSEXP, SEXP lastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type last(lastSEXP);
    rcpp_result_gen = Rcpp::wrap(ssr_vec(start, y, z, h, last));
    return rcpp_result_gen;
END_RCPP
}
// ssrbigvec
arma::vec ssrbigvec(arma::mat y, arma::mat z, int h);
RcppExport SEXP _mbreaks_ssrbigvec(SEXP ySEXP, SEXP zSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(ssrbigvec(y, z, h));
    return rcpp_result_gen;
END_RCPP
}
// mlef
arma::vec mlef(int start, arma::vec y, arma::mat z, int q, arma::mat x, int p, int h, int last);
RcppExport SEXP _mbreaks_mlef(SEXP startSEXP, SEXP ySEXP, SEXP zSEXP, SEXP qSEXP, SEXP xSEXP, SEXP pSEXP, SEXP hSEXP, SEXP lastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type last(lastSEXP);
    rcpp_result_gen = Rcpp::wrap(mlef(start, y, z, q, x, p, h, last));
    return rcpp_result_gen;
END_RCPP
}
// mlebigvec
arma::vec mlebigvec(arma::vec y, arma::mat z, int q, arma::mat x, int p, int h, int bigt);
RcppExport SEXP _mbreaks_mlebigvec(SEXP ySEXP, SEXP zSEXP, SEXP qSEXP, SEXP xSEXP, SEXP pSEXP, SEXP hSEXP, SEXP bigtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type bigt(bigtSEXP);
    rcpp_result_gen = Rcpp::wrap(mlebigvec(y, z, q, x, p, h, bigt));
    return rcpp_result_gen;
END_RCPP
}
// parti
List parti(int start, int b1, int b2, int last, arma::vec bigvec, int bigt);
RcppExport SEXP _mbreaks_parti(SEXP startSEXP, SEXP b1SEXP, SEXP b2SEXP, SEXP lastSEXP, SEXP bigvecSEXP, SEXP bigtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< int >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< int >::type last(lastSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bigvec(bigvecSEXP);
    Rcpp::traits::input_parameter< int >::type bigt(bigtSEXP);
    rcpp_result_gen = Rcpp::wrap(parti(start, b1, b2, last, bigvec, bigt));
    return rcpp_result_gen;
END_RCPP
}
// parti_loglik
List parti_loglik(int start, int b1, int b2, int last, arma::vec bigvec, int bigt);
RcppExport SEXP _mbreaks_parti_loglik(SEXP startSEXP, SEXP b1SEXP, SEXP b2SEXP, SEXP lastSEXP, SEXP bigvecSEXP, SEXP bigtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< int >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< int >::type last(lastSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bigvec(bigvecSEXP);
    Rcpp::traits::input_parameter< int >::type bigt(bigtSEXP);
    rcpp_result_gen = Rcpp::wrap(parti_loglik(start, b1, b2, last, bigvec, bigt));
    return rcpp_result_gen;
END_RCPP
}
// dating_purescSSR
List dating_purescSSR(arma::vec y, arma::mat z, int m, int h);
RcppExport SEXP _mbreaks_dating_purescSSR(SEXP ySEXP, SEXP zSEXP, SEXP mSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(dating_purescSSR(y, z, m, h));
    return rcpp_result_gen;
END_RCPP
}
// dating_loglik
List dating_loglik(arma::vec bigvec, int h, int m, int bigt);
RcppExport SEXP _mbreaks_dating_loglik(SEXP bigvecSEXP, SEXP hSEXP, SEXP mSEXP, SEXP bigtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type bigvec(bigvecSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type bigt(bigtSEXP);
    rcpp_result_gen = Rcpp::wrap(dating_loglik(bigvec, h, m, bigt));
    return rcpp_result_gen;
END_RCPP
}
// dating_MLE
List dating_MLE(arma::vec y, arma::mat z, int q, arma::mat x, int p, int h, int m, int bigt);
RcppExport SEXP _mbreaks_dating_MLE(SEXP ySEXP, SEXP zSEXP, SEXP qSEXP, SEXP xSEXP, SEXP pSEXP, SEXP hSEXP, SEXP mSEXP, SEXP bigtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type bigt(bigtSEXP);
    rcpp_result_gen = Rcpp::wrap(dating_MLE(y, z, q, x, p, h, m, bigt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mbreaks_ssr_vec", (DL_FUNC) &_mbreaks_ssr_vec, 5},
    {"_mbreaks_ssrbigvec", (DL_FUNC) &_mbreaks_ssrbigvec, 3},
    {"_mbreaks_mlef", (DL_FUNC) &_mbreaks_mlef, 8},
    {"_mbreaks_mlebigvec", (DL_FUNC) &_mbreaks_mlebigvec, 7},
    {"_mbreaks_parti", (DL_FUNC) &_mbreaks_parti, 6},
    {"_mbreaks_parti_loglik", (DL_FUNC) &_mbreaks_parti_loglik, 6},
    {"_mbreaks_dating_purescSSR", (DL_FUNC) &_mbreaks_dating_purescSSR, 4},
    {"_mbreaks_dating_loglik", (DL_FUNC) &_mbreaks_dating_loglik, 4},
    {"_mbreaks_dating_MLE", (DL_FUNC) &_mbreaks_dating_MLE, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_mbreaks(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
